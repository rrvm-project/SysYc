original punishment: 15 final punishment: 14
original punishment: 12 final punishment: 8
original punishment: 9 final punishment: 7
original punishment: 12 final punishment: 8
original punishment: 9 final punishment: 7
original punishment: 12 final punishment: 8
original punishment: 9 final punishment: 7
original punishment: 12 final punishment: 11
original punishment: 19 final punishment: 17
original punishment: 19 final punishment: 17
original punishment: 30 final punishment: 29
original punishment: 19 final punishment: 17
original punishment: 12 final punishment: 8
original punishment: 9 final punishment: 7
  .file "./project-eval/testcases/performance/gameoflife-p61glidergun.sy"
  .option nopic
  .attribute unaligned_access, 0
  .attribute stack_align, 16
  .text
  .global sheet1
  .section	.sbss, "aw", @nobits
  .align 2
  .type sheet1, @object
  .size sheet1, 1000000
sheet1:
  .zero 1000000
  .global sheet2
  .align 2
  .type sheet2, @object
  .size sheet2, 1000000
sheet2:
  .zero 1000000
  .global width
  .align 2
  .type width, @object
  .size width, 4
width:
  .zero 4
  .global height
  .align 2
  .type height, @object
  .size height, 4
height:
  .zero 4
  .global steps
  .align 2
  .type steps, @object
  .size steps, 4
steps:
  .zero 4
  .global active
  .section	.sdata, "aw"
  .align 2
  .type active, @object
  .size active, 4
active:
  .word 1
  .text
  .global main
  .align 1
  .type read_map, @function
read_map:
    addi sp, sp, -48
    sd s2, 0(sp)
    sd ra, 8(sp)
    sd s4, 16(sp)
    sd s5, 24(sp)
    sd s1, 32(sp)
    sd s3, 40(sp)
    la s5, width
    call getint
    sw a0, 0(s5)
    la s4, height
    li s1, 1
    call getint
    sw a0, 0(s4)
    la s3, steps
    call getint
    sw a0, 0(s3)
    call getch
    j L_1
  L_2:
    li a0, 1
    j L_3
  L_4:
    call getch
    xori a0, a0, 35
    seqz a0, a0
    bne a0, x0, L_5
    la a0, sheet1
    add s5, a0, s3
    add a0, s5, s2
    sw x0, 0(a0)
    j L_6
  L_5:
    la a0, sheet1
    add s5, a0, s3
    add s2, s5, s2
    li s5, 1
    sw s5, 0(s2)
  L_6:
    mv a0, s1
  L_3:
    la s5, width
    addiw s1, a0, 1
    slliw s2, a0, 2
    lw s5, 0(s5)
    slt s5, s5, a0
    seqz s5, s5
    bne s5, x0, L_4
    call getch
    mv s1, s4
  L_1:
    li s5, 2000
    la s2, height
    addiw s4, s1, 1
    mulw s3, s1, s5
    lw s2, 0(s2)
    slt s1, s2, s1
    seqz s1, s1
    bne s1, x0, L_2
    ld s2, 0(sp)
    ld ra, 8(sp)
    ld s4, 16(sp)
    ld s5, 24(sp)
    ld s1, 32(sp)
    ld s3, 40(sp)
    addi sp, sp, 48
    ret
  .size read_map, .-read_map
  .align 1
  .type put_map, @function
put_map:
    addi sp, sp, -48
    sd s3, 0(sp)
    sd s1, 8(sp)
    sd s4, 16(sp)
    sd ra, 24(sp)
    sd s5, 32(sp)
    sd s2, 40(sp)
    li a0, 1
    j L_7
  L_8:
    li s4, 1
    j L_9
  L_10:
    la a0, sheet1
    add s4, a0, s5
    add s1, s4, s1
    lw a0, 0(s1)
    xori a0, a0, 1
    seqz a0, a0
    bne a0, x0, L_11
    li a0, 46
    call putch
    j L_12
  L_11:
    li a0, 35
    call putch
  L_12:
    mv s4, s2
  L_9:
    la a0, width
    slliw s1, s4, 2
    addiw s2, s4, 1
    lw a0, 0(a0)
    slt s4, a0, s4
    seqz s4, s4
    bne s4, x0, L_10
    li a0, 10
    call putch
    mv a0, s3
  L_7:
    la s4, height
    addiw s3, a0, 1
    li s5, 2000
    lw s2, 0(s4)
    mulw s5, a0, s5
    slt s2, s2, a0
    seqz s2, s2
    bne s2, x0, L_8
    ld s3, 0(sp)
    ld s1, 8(sp)
    ld s4, 16(sp)
    ld ra, 24(sp)
    ld s5, 32(sp)
    ld s2, 40(sp)
    addi sp, sp, 48
    ret
  .size put_map, .-put_map
  .align 1
  .type swap12, @function
swap12:
    addi sp, sp, -48
    sd s2, 0(sp)
    sd s6, 8(sp)
    sd s4, 16(sp)
    sd s1, 24(sp)
    sd s5, 32(sp)
    sd s3, 40(sp)
    li s2, 1
    j L_13
  L_14:
    li s1, 1
    j L_15
  L_16:
    la s6, sheet2
    mv s1, s2
    add s6, s6, s3
    la s2, sheet1
    add s2, s2, s3
    add s6, s6, s5
    lw s6, 0(s6)
    add s5, s2, s5
    sw s6, 0(s5)
  L_15:
    la s6, width
    addiw s2, s1, 1
    slliw s5, s1, 2
    lw s6, 0(s6)
    slt s1, s6, s1
    seqz s1, s1
    bne s1, x0, L_16
    mv s2, s4
  L_13:
    li s3, 2000
    la s6, height
    addiw s4, s2, 1
    mulw s3, s2, s3
    lw s5, 0(s6)
    slt s2, s5, s2
    seqz s2, s2
    bne s2, x0, L_14
    ld s2, 0(sp)
    ld s6, 8(sp)
    ld s4, 16(sp)
    ld s1, 24(sp)
    ld s5, 32(sp)
    ld s3, 40(sp)
    addi sp, sp, 48
    ret
  .size swap12, .-swap12
  .align 1
  .type step, @function
step:
    addi sp, sp, -96
    sd s6, 0(sp)
    sd s7, 8(sp)
    sd s1, 16(sp)
    sd s4, 24(sp)
    sd s8, 32(sp)
    sd s9, 40(sp)
    sd s10, 48(sp)
    sd s11, 56(sp)
    sd s2, 64(sp)
    sd s3, 72(sp)
    sd s5, 80(sp)
    li s4, 1
    j L_17
  L_18:
    li a5, 1
    j L_19
  L_20:
    lw s2, 0(s4)
    lw s1, 0(s6)
    addw s2, s2, s1
    lw s1, 0(s7)
    addw s2, s2, s1
    lw s1, 0(s8)
    addw s2, s2, s1
    lw s1, 0(s9)
    addw s2, s2, s1
    lw s1, 0(s10)
    addw s2, s2, s1
    lw s1, 0(s11)
    addw s2, s2, s1
    lw s1, 0(a2)
    addw s3, s2, s1
    lw s1, 0(a3)
    xori s1, s1, 1
    seqz s1, s1
    xori s2, s3, 2
    seqz s2, s2
    bne s1, x0, L_21
    li s2, 0
    j L_22
  L_21:
  L_22:
    bne s2, x0, L_23
    xori s1, s3, 3
    seqz s1, s1
    bne s1, x0, L_24
    sw x0, 0(a4)
    j L_25
  L_23:
    li s1, 1
    sw s1, 0(a4)
  L_26:
  L_19:
    la s1, width
    lw s1, 0(s1)
    slt s5, s1, a5
    seqz s5, s5
    addiw s1, a5, -1
    slliw s1, s1, 2
    add s4, t1, s1
    slliw s3, a5, 2
    add s6, t1, s3
    addiw a5, a5, 1
    slliw s2, a5, 2
    add s7, t1, s2
    add s8, a7, s1
    add s9, a7, s2
    add s10, t0, s1
    add s11, t0, s3
    add a2, t0, s2
    add a3, a7, s3
    add a4, a6, s3
    bne s5, x0, L_20
    mv s4, t2
  L_17:
    addiw t2, s4, 1
    li s5, 2000
    li s2, 2000
    addiw s1, s4, -1
    li s3, 2000
    mulw s1, s1, s2
    add t1, a0, s1
    la s2, height
    mulw s1, t2, s3
    add t0, a0, s1
    lw s1, 0(s2)
    slt s2, s1, s4
    seqz s2, s2
    mulw s1, s4, s5
    add a7, a0, s1
    add a6, a1, s1
    bne s2, x0, L_18
    ld s6, 0(sp)
    ld s7, 8(sp)
    ld s1, 16(sp)
    ld s4, 24(sp)
    ld s8, 32(sp)
    ld s9, 40(sp)
    ld s10, 48(sp)
    ld s11, 56(sp)
    ld s2, 64(sp)
    ld s3, 72(sp)
    ld s5, 80(sp)
    addi sp, sp, 96
    ret
  L_24:
    li s1, 1
    sw s1, 0(a4)
  L_25:
    j L_26
  .size step, .-step
  .align 1
  .type main, @function
main:
    addi sp, sp, -96
    sd s9, 0(sp)
    sd s1, 8(sp)
    sd s4, 16(sp)
    sd s7, 24(sp)
    sd ra, 32(sp)
    sd s8, 40(sp)
    sd s5, 48(sp)
    sd s3, 56(sp)
    sd s6, 64(sp)
    sd s11, 72(sp)
    sd s10, 80(sp)
    sd s2, 88(sp)
    call read_map
    li a0, 95
    call _sysy_starttime
    j L_27
  L_28:
    la s1, active
    lw s1, 0(s1)
    xori s1, s1, 1
    seqz s1, s1
    bne s1, x0, L_29
    la t0, sheet2
    la t2, sheet1
    li s4, 1
    j L_30
  L_29:
    la t0, sheet1
    la t2, sheet2
    li s5, 1
    j L_31
  L_32:
    li s3, 1
    j L_33
  L_34:
    li a3, 1
    j L_35
  L_36:
    lw s5, 0(s4)
    lw s1, 0(s1)
    xori s11, s1, 1
    seqz s11, s11
    lw s3, 0(s6)
    lw s4, 0(s7)
    lw s2, 0(s8)
    lw s1, 0(s9)
    addw s1, s1, s2
    addw s2, s1, s3
    lw s1, 0(s10)
    addw s1, s2, s1
    addw s2, s1, s5
    lw s1, 0(a0)
    addw s1, s2, s1
    addw s2, s1, s4
    lw s1, 0(a1)
    addw s2, s2, s1
    xori s1, s2, 2
    seqz s1, s1
    bne s11, x0, L_37
    li s1, 0
    j L_38
  L_37:
  L_38:
    bne s1, x0, L_39
    xori s1, s2, 3
    seqz s1, s1
    bne s1, x0, L_40
    sw x0, 0(a2)
    j L_41
  L_39:
    li s1, 1
    sw s1, 0(a2)
  L_42:
  L_35:
    la s1, width
    lw s1, 0(s1)
    slt s5, s1, a3
    seqz s5, s5
    addiw s1, a3, -1
    slliw s1, s1, 2
    add s9, a4, s1
    slliw s3, a3, 2
    add s8, a4, s3
    addiw a3, a3, 1
    slliw s2, a3, 2
    add s6, a4, s2
    add s10, a6, s1
    add s4, a6, s2
    add a0, a5, s1
    add s7, a5, s3
    add a1, a5, s2
    add s1, a6, s3
    add a2, a7, s3
    bne s5, x0, L_36
    mv s5, t1
  L_31:
    addiw t1, s5, 1
    addiw s3, s5, -1
    li s4, 2000
    li s1, 2000
    li s2, 2000
    mulw s1, s5, s1
    add a7, t2, s1
    add a6, t0, s1
    mulw s1, t1, s2
    add a5, t0, s1
    la s2, height
    mulw s1, s3, s4
    add a4, t0, s1
    lw s1, 0(s2)
    slt s1, s1, s5
    seqz s1, s1
    bne s1, x0, L_34
    la s2, active
    li s1, 2
    sw s1, 0(s2)
  L_43:
    la s2, steps
    la s1, steps
    lw s1, 0(s1)
    addiw s1, s1, -1
    sw s1, 0(s2)
  L_27:
    la s1, steps
    lw s1, 0(s1)
    slt s1, x0, s1
    bne s1, x0, L_28
    li a0, 106
    call _sysy_stoptime
    la s1, active
    lw s1, 0(s1)
    xori s1, s1, 2
    seqz s1, s1
    bne s1, x0, L_32
    j L_44
  L_40:
    li s1, 1
    sw s1, 0(a2)
  L_41:
    j L_42
  L_45:
    li a3, 1
    j L_46
  L_47:
    lw s2, 0(s4)
    lw s1, 0(s6)
    addw s2, s2, s1
    lw s1, 0(s7)
    addw s2, s2, s1
    lw s1, 0(s8)
    addw s2, s2, s1
    lw s1, 0(s9)
    addw s2, s2, s1
    lw s1, 0(s10)
    addw s2, s2, s1
    lw s1, 0(s11)
    addw s2, s2, s1
    lw s1, 0(a0)
    addw s3, s2, s1
    lw s1, 0(a1)
    xori s2, s1, 1
    seqz s2, s2
    xori s1, s3, 2
    seqz s1, s1
    bne s2, x0, L_48
    li s1, 0
    j L_49
  L_48:
  L_49:
    bne s1, x0, L_50
    xori s1, s3, 3
    seqz s1, s1
    bne s1, x0, L_51
    sw x0, 0(a2)
    j L_52
  L_50:
    li s1, 1
    sw s1, 0(a2)
  L_53:
  L_46:
    la s1, width
    lw s1, 0(s1)
    slt s5, s1, a3
    seqz s5, s5
    addiw s1, a3, -1
    slliw s1, s1, 2
    add s4, a7, s1
    slliw s3, a3, 2
    add s6, a7, s3
    addiw a3, a3, 1
    slliw s2, a3, 2
    add s7, a7, s2
    add s8, a5, s1
    add s9, a5, s2
    add s10, a4, s1
    add s11, a4, s3
    add a0, a4, s2
    add a1, a5, s3
    add a2, a6, s3
    bne s5, x0, L_47
    mv s4, t1
  L_30:
    li s5, 2000
    li s2, 2000
    li s3, 2000
    addiw t1, s4, 1
    addiw s1, s4, -1
    mulw s1, s1, s2
    add a7, t0, s1
    la s2, height
    mulw s1, s4, s3
    add a6, t2, s1
    add a5, t0, s1
    lw s1, 0(s2)
    slt s2, s1, s4
    mulw s1, t1, s5
    seqz s2, s2
    add a4, t0, s1
    bne s2, x0, L_45
    la s2, active
    li s1, 1
    sw s1, 0(s2)
    j L_43
  L_51:
    li s1, 1
    sw s1, 0(a2)
  L_52:
    j L_53
  L_54:
    li s2, 1
    j L_55
  L_56:
    la s1, sheet1
    add s1, s1, s5
    add s2, s1, s3
    la s1, sheet2
    add s1, s1, s5
    add s1, s1, s3
    lw s1, 0(s1)
    sw s1, 0(s2)
    mv s2, s4
  L_55:
    la s1, width
    addiw s4, s2, 1
    slliw s3, s2, 2
    lw s1, 0(s1)
    slt s1, s1, s2
    seqz s1, s1
    bne s1, x0, L_56
    mv s3, s6
  L_33:
    li s1, 2000
    la s2, height
    addiw s6, s3, 1
    mulw s5, s3, s1
    lw s1, 0(s2)
    slt s1, s1, s3
    seqz s1, s1
    bne s1, x0, L_54
  L_44:
    call put_map
    li a0, 0
    ld s9, 0(sp)
    ld s1, 8(sp)
    ld s4, 16(sp)
    ld s7, 24(sp)
    ld ra, 32(sp)
    ld s8, 40(sp)
    ld s5, 48(sp)
    ld s3, 56(sp)
    ld s6, 64(sp)
    ld s11, 72(sp)
    ld s10, 80(sp)
    ld s2, 88(sp)
    addi sp, sp, 96
    ret
  .size main, .-main
 

.text
.global __create_threads
.global __join_threads

	SYS_clone = 220
	CLONE_VM = 256
	SIGCHLD = 17
	__create_threads:
		addi a0, a0, -1
		ble a0, zero, .ret_0
		mv a6, a0
		li a5, 0
		mv a1, sp
		li a2, 0
		li a3, 0
		li a4, 0
	.L0_builtin:
		li a0, (CLONE_VM | SIGCHLD)
		li a7, SYS_clone
		ecall
		bne a0, zero, .ret_i
		addi a5, a5, 1
		blt a5, a6, .L0_builtin
	.ret_n:
		mv a0, a6
		j .L1_builtin
	.ret_0:
		mv a0, zero
		j .L1_builtin
	.ret_i:
		mv a0, a5
	.L1_builtin:
		jr ra

	SYS_waitid = 95
	SYS_exit = 93
	P_ALL = 0
	WEXITED = 4
	__join_threads:
		mv a4, a0
		addi a5, a1, -1
		beq a4, a5, .L2_builtin
		li a0, P_ALL
		li a1, 0
		li a2, 0
		li a3, WEXITED
		li a7, SYS_waitid
		ecall
	.L2_builtin:
		beq a4, zero, .L3_builtin
		li a0, 0
		li a7, SYS_exit
		ecall
	.L3_builtin:
		jr ra


	__fill_zero_words:
		ble a1, zero, .L8_builtin 
		addi a1, a1, -1
		slliw a1, a1, 2
		add a2, a1, a0  # 最后一次4字节
		addi a3, a2, -1
		andi a3, a3, -8 # 最后一次8字节
		andi a4, a0, 7
		beq a4, x0, .L4_builtin

		sw x0, 0(a0)
		addi a0, a0, 4

		.L4_builtin:
			bgtu a0, a3, .L7_builtin 

		.L5_builtin:
			sd x0, 0(a0)
			addi a0, a0, 8
			ble a0, a3, .L5_builtin

		.L7_builtin:
			bgtu a0, a2, .L8_builtin # 如果不够最后一次4字节
			sw x0, 0(a0)
			addi a0, a0, 4

		.L8_builtin:
			jr ra

		


 .ident "SYSYC: (made by RRVM) 1.0.0"
